<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>架构师之路</title>
  
  <subtitle>Dream is possible</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-22T04:14:03.109Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>风起枫落</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>editormd图片上传</title>
    <link href="http://yoursite.com/2019/10/21/editormd%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    <id>http://yoursite.com/2019/10/21/editormd图片上传/</id>
    <published>2019-10-21T14:57:56.000Z</published>
    <updated>2019-10-22T04:14:03.109Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近搞一个网站的时候觉得别的富文本编辑器看起来都太臃肿了而且配置繁琐，尤其是ueditor（百度的富文本编辑器），单纯基于前端JavaScript，无需后台代码加持，适用于任何语言，国人开发的，对中文支持很好，editormd会自动帮你排版，在右边还能看到最后的效果。</p><h3 id="图片上传"><a href="#图片上传" class="headerlink" title="图片上传"></a>图片上传</h3><p>怎么配置editormd的方法网上有很多，我就不啰嗦了，我就说一下我是用editormd遇到的问题。</p><p>当我要使用editormd进行图片上传时，首先你要开启图片上传功能<code>imageUpload:true</code>，之后你可以设置一下上传图片文件的类型<code>imageFormats:[&quot;jpg&quot;, &quot;jpeg&quot;, &quot;gif&quot;, &quot;png&quot;, &quot;bmp&quot;, &quot;webp&quot;]</code>，最后你要设置图片上传要调用的<code>controllerimageUploadURL:&quot;/image&quot;</code>。</p><p>我用的是基于spring boot开发的网站，内置tomcat，所以重启项目时上传项目的图片会清除，所以上传时要存两个地方，一个项目内，一个磁盘上。</p><p>先在springApplication.properties定义两个路径：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 图片上传路径</span><br><span class="line">img.location= /article/images/</span><br><span class="line">img.backup= G:/article/images/</span><br></pre></td></tr></table></figure><p>然后将值注入到这两个变量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;img.location&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String location;</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;img.backup&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String backup;</span><br></pre></td></tr></table></figure><p>然后我就遇到一个坑，当你通过http上传的图片接收时，只能接受一次，也就是说我用<code>MultipartFile file</code>接收，然后通过<code>file.transferTo()</code>上传时没问题，当我再想用这个方法上传到备份地址时，发现图片就不见了，就这个问题我耽搁了半个下午，之后找到问题所在了，我就只能另辟蹊径，我有想过copy这个文件，但需要将<code>MultipartFile</code>转成<code>File</code>，就很麻烦，我也试过一开始用<code>FileOutputStream</code>输入输出流进行文件的上传，还是同一个问题，上传文件之后，图片就会不见，然后我仔细观察了下，发现当我进行输入输出流的时候，它是先转化成二进制文件，然后我就先把文件转成二进制文件，这个是重新new了一个byte[]对象。之后我再通过<code>file.transferTo()</code>上传，然后将byte[]通过输入输出流进行另一个地址的图片上传。具体代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"image"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">upload</span><span class="params">(HttpServletRequest request, @RequestParam(value = <span class="string">"editormd-image-file"</span>, required = <span class="keyword">false</span>)</span> MultipartFile file) </span>&#123;</span><br><span class="line">    String fileName = file.getOriginalFilename();</span><br><span class="line">    String suffix = fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">    String newFileName = <span class="keyword">new</span> Date().getTime() + <span class="string">"."</span> + suffix;</span><br><span class="line">    logger.info(<span class="string">"【fileName】=&#123;&#125;,【fileOrginName】=&#123;&#125;,【newFileName】=&#123;&#125;,【fileSize】=&#123;&#125;"</span>, file.getName(), file.getOriginalFilename(), newFileName, file.getSize() + <span class="string">"字节"</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] fileByte = file.getBytes();</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 项目上传一份，重启服务器图片丢失</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        String filePath = request.getSession().getServletContext().getRealPath(location);</span><br><span class="line">        File targetFile = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        <span class="keyword">if</span> (!targetFile.exists()) &#123;</span><br><span class="line">            targetFile.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        file.transferTo(<span class="keyword">new</span> File(filePath + newFileName));</span><br><span class="line">        filePath = backup;</span><br><span class="line">        targetFile = <span class="keyword">new</span> File(filePath);</span><br><span class="line">        <span class="keyword">if</span> (!targetFile.exists()) &#123;</span><br><span class="line">            targetFile.mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 上传磁盘一份，重启项目后由磁盘恢复</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        FileOutputStream outputStream = <span class="keyword">new</span> FileOutputStream(filePath + newFileName);</span><br><span class="line">        outputStream.write(fileByte);</span><br><span class="line">        outputStream.flush();</span><br><span class="line">        outputStream.close();</span><br><span class="line">        String url = request.getRequestURL().substring(<span class="number">0</span>, request.getRequestURL().lastIndexOf(<span class="string">"/"</span>))+location+ newFileName;</span><br><span class="line">        <span class="keyword">return</span> ResultUtil.success(<span class="string">"上传成功"</span>, url);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> ResultUtil.failure();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>当然了，我这也是另辟蹊径，实际上还是没能解决http接收文件只能执行一次的问题，但是问题解决了总是好的。如有问题请提出。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;最近搞一个网站的时候觉得别的富文本编辑器看起来都太臃肿了而且配置繁琐，尤其是ueditor（百度的富文本编辑器），单纯基于前端JavaScr
      
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="editormd" scheme="http://yoursite.com/tags/editormd/"/>
    
      <category term="图片上传" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
</feed>
